var models = require("../models");
var family = require("../app/family")
  .family_mgr;
var divorce = require("../app/divorce")
  .divorce_mgr;
// var branch = require('../app/branch')
//   .branch_mgr;
var office = require("../app/office")
  .office_mgr;
var country = require('../app/country').country_mgr;

var region = require('../app/region').region_mgr;
module.exports = function (router) {

  router.get('/divorce', function (req, res) {
    family.get_family(function (result) {
      region.get_regions(function(result1) {
        country.get_country(function(countrys){
          res.render('divorce', {
            title : "واقعة الطﻻق",
            collapse_three: 'in', 
            active_three_three: 'active',
            familys: result.result.rows,
            regions:result1.rows,
            countrys:countrys
          });
        })  
      })
    });  
  });
  /*------------*/
  var familyId;
  router.get('/divorce/:id', function (req, res) {
    familyId=req.params.id;
      divorce.get_wife(familyId,function (wife){  
        divorce.get_father(familyId,function (father){
          var names = {
          wifes : wife,
          fathers :  father,
          };
          res.send(names);
        })
      })
  });
  /*-----------*/
  router.get('/divorce/search_family/:id', function (req, res) {
      divorce.get_family_by_registry_number(req.params.id,function (family){
        console.log(family[0]);
        res.send(family[0]);
     })
  });
  /*============*/
  var sunId;
  router.get('/divorce/suns/:id', function (req, res) {
    sunId=req.params.id;
      divorce.get_suns(sunId,function (suns){
        res.send(suns);
     })
  });
  /*===============*/
  router.get('/divorce/Personal/:id', function (req, res) {
    divorce.get_Personal(req.params.id,function (per){
      res.send(per[0]);
    })
  });
/*==================*/
  router.post('/divorce/new_divorce',function (req, res) {
    console.log(req.body);
    if(req.body.wife_bt_family == '1'){
      wife_personal_Id = req.body.waif_name;
      divorce.updet_wife_fmly(wife_personal_Id,function(result){
      });
    }
    else{

        var new_family = {
        OfficeId : req.body.officeId,  
        Registrynumber : req.body.Registrynumber,
        Recordnumber : req.body.Recordnumber,
        FamilyRecordDate : req.body.FamilyRecordDate,
        Autogenerated_Id : req.body.Autogenerated_Id,
        Is_Closed : req.body.Is_Closed,
        FamilyType : req.body.FamilyType
      };
      divorce.add_family(new_family,function(result){
        divorce.updet_wife_new({FamilyId:result.id,KinshipId:1},req.body.waif_name,function(result1){
          if(req.body.wife_custody == 'on')
          {
            divorce.updet_wife_sons(req.body.son,result.id,function(result2){
            });
          }     
        });
      });
    }
      if(req.body.wife_custody == 'on')
        {
          var w_custody = 1;
        }
        else
        {
          var w_custody = 2;  
        }
      
      var divorce_c = {
        wife_custody : w_custody,
        husband_personal_Id : req.body.father_name,
        wife_personal_Id : req.body.waif_name,
        wife_bt_family : req.body.wife_bt_family,
        OfficeId : req.body.officeId,
        divorce_place : req.body.divorce_place,
        divorce_date : req.body.divorce_date,
        contract_number : req.body.contract_divorce_number,
        record_divorce_nu : req.body.record_divorce_number,
        inform_date : req.body.inform_date,
        CityId : req.body.city_Id,
        divorce_type : req.body.divorce_type
      };
      console.log(divorce_c);
      divorce.add_divorce(divorce_c,function(result2){
        res.redirect('/divorce');  
      });
  });
}